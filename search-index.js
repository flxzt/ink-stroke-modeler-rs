var searchIndex = JSON.parse('{\
"ink_stroke_modeler_rs":{"doc":"Unofficial Rust bindings for the ink-stroke-modeler C++ â€¦","t":[13,3,3,4,3,4,13,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,13,13,13,12,12,12,12,11,11,11,11,11,11,12,12,11,12,12,12,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12],"n":["Kalman","KalmanPredictorParams","ModelerInput","ModelerInputEventType","ModelerResult","PredictionParams","StrokeEnd","StrokeModeler","StrokeModelerParams","acceleration_weight","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","confidence_baseline_linearity_confidence","confidence_desired_number_of_samples","confidence_max_estimation_distance","confidence_max_linear_deviation","confidence_max_travel_speed","confidence_min_travel_speed","default","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get_event_type","get_orientation","get_orientation","get_pos","get_pos","get_pressure","get_pressure","get_tilt","get_tilt","get_time","get_time","get_velocity","hash","into","into","into","into","into","into","into","jerk_weight","kDown","kMove","kUp","max_time_samples","measurement_noise","min_catchup_velocity","min_stable_iteration","new","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","position_modeler_drag_constant","position_modeler_spring_mass_constant","predict","prediction_interval","prediction_params","process_noise","reset","reset_w_params","sampling_end_of_stroke_max_iterations","sampling_end_of_stroke_stopping_distance","sampling_max_outputs_per_call","sampling_min_output_rate","stylus_state_modeler_max_input_samples","suggested","suggested","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update","wobble_smoother_speed_ceiling","wobble_smoother_speed_floor","wobble_smoother_timeout","0"],"q":["ink_stroke_modeler_rs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ink_stroke_modeler_rs::PredictionParams"],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[2,0,0,0,0,0,2,0,0,3,8,11,6,1,2,3,4,8,11,6,1,2,3,4,1,2,3,4,1,2,3,4,1,3,3,3,3,3,3,6,1,2,3,4,8,11,1,2,3,4,8,8,11,11,6,1,2,3,4,8,8,11,8,11,8,11,8,11,8,11,11,1,8,11,6,1,2,3,4,3,1,1,1,3,3,3,3,8,6,1,2,3,4,4,4,6,3,4,3,6,6,4,4,4,4,4,3,4,1,2,3,4,8,11,8,11,6,1,2,3,4,8,11,6,1,2,3,4,8,11,6,1,2,3,4,6,4,4,4,20],"f":[0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[3,3],[4,4],[[]],[[]],[[]],[[]],[[1,1],5],0,0,0,0,0,0,[[],6],[[1,1],7],[[2,2],7],[[3,3],7],[[4,4],7],[[8,9],10],[[11,9],10],[[1,9],10],[[2,9],10],[[3,9],10],[[4,9],10],[[[12,[0]]],8],[[]],[[[12,[0]]],11],[[]],[[]],[[]],[[]],[[]],[[]],[8,1],[8,13],[11,13],[8],[11],[8,13],[11,13],[8,13],[11,13],[8,14],[11,14],[11],[1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[1,14,13,13,13],8],[4,6],[[1,1],[[15,[5]]]],[[2,2],[[15,[5]]]],[[3,3],[[15,[5]]]],[[4,4],[[15,[5]]]],0,0,[6,[[16,[11]]]],0,0,0,[6],[[6,4]],0,0,0,0,0,[[],3],[[],4],[[]],[[]],[[]],[[]],[[],17],[[],17],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[6,8],[[16,[11]]]],0,0,0,0],"p":[[4,"ModelerInputEventType"],[4,"PredictionParams"],[3,"KalmanPredictorParams"],[3,"StrokeModelerParams"],[4,"Ordering"],[3,"StrokeModeler"],[15,"bool"],[3,"ModelerInput"],[3,"Formatter"],[6,"Result"],[3,"ModelerResult"],[3,"UniquePtr"],[15,"f32"],[15,"f64"],[4,"Option"],[3,"Vec"],[3,"String"],[4,"Result"],[3,"TypeId"],[13,"Kalman"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
