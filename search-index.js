var searchIndex = new Map(JSON.parse('[\
["ink_stroke_modeler_rs",{"doc":"Unofficial Rust bindings for the ink-stroke-modeler C++ â€¦","t":"PPPFGFGFFGPFONNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOPPPOOOONNNNNNNNNNNOONOONNONNOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOO","n":["AbslStatusCode","Disabled","Kalman","KalmanPredictorParams","ModelerError","ModelerInput","ModelerInputEventType","ModelerParams","ModelerResult","PredictionParams","StrokeEnd","StrokeModeler","acceleration_weight","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","confidence_baseline_linearity_confidence","confidence_desired_number_of_samples","confidence_max_estimation_distance","confidence_max_linear_deviation","confidence_max_travel_speed","confidence_min_travel_speed","default","eq","eq","eq","eq","eq","event_type","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","hash","hash","into","into","into","into","into","into","into","into","jerk_weight","kDown","kMove","kUp","max_time_samples","measurement_noise","min_catchup_velocity","min_stable_iteration","new","new","orientation","orientation","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pos","pos","position_modeler_drag_constant","position_modeler_spring_mass_constant","predict","prediction_interval","prediction_params","pressure","pressure","process_noise","reset","reset_w_params","sampling_end_of_stroke_max_iterations","sampling_end_of_stroke_stopping_distance","sampling_max_outputs_per_call","sampling_min_output_rate","stylus_state_modeler_max_input_samples","suggested","suggested","tilt","tilt","time","time","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update","velocity","wobble_smoother_speed_ceiling","wobble_smoother_speed_floor","wobble_smoother_timeout"],"q":[[0,"ink_stroke_modeler_rs"],[154,"core::cmp"],[155,"core::fmt"],[156,"core::fmt"],[157,"core::hash"],[158,"core::option"],[159,"alloc::vec"],[160,"core::result"],[161,"alloc::string"],[162,"core::any"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[6,2,2,0,0,0,0,0,0,0,2,0,3,10,13,8,6,1,2,3,4,10,13,8,6,1,2,3,4,1,2,3,4,1,2,3,4,6,1,3,3,3,3,3,3,8,6,1,2,3,4,10,10,13,6,6,1,2,3,4,10,10,13,13,8,6,1,2,3,4,6,1,10,13,8,6,1,2,3,4,3,1,1,1,3,3,3,3,10,8,10,13,6,1,2,3,4,10,13,4,4,8,3,4,10,13,3,8,8,4,4,4,4,4,3,4,10,13,10,13,1,2,3,4,6,10,13,8,6,1,2,3,4,10,13,8,6,1,2,3,4,10,13,8,6,1,2,3,4,8,13,4,4,4],"f":"`````````````{ce{}{}}000000000000000{bb}{dd}{ff}{hh}{{ce}j{}{}}000{{ll}n}{{bb}n}``````{{}A`}{{ll}Ab}{{bb}Ab}{{dd}Ab}{{ff}Ab}{{hh}Ab}{Adb}{{AdAf}Ah}{{AjAf}Ah}{{lAf}Ah}0{{bAf}Ah}{{dAf}Ah}{{fAf}Ah}{{hAf}Ah}{{{Al{`}}}Ad}{cc{}}{{{Al{`}}}Aj}1111111{{lc}jAn}{{bc}jAn}{ce{}{}}0000000````````{{b{Bb{B`B`}}BdB`B`B`}Ad}{hA`}{AdB`}{AjB`}{{ll}{{Bf{n}}}}{{bb}{{Bf{n}}}}{{dd}{{Bf{n}}}}{{ff}{{Bf{n}}}}{{hh}{{Bf{n}}}}{Ad{{Bb{B`B`}}}}{Aj{{Bb{B`B`}}}}``{A`{{Bj{{Bh{Aj}}l}}}}``98`{A`{{Bj{jl}}}}{{A`h}{{Bj{jl}}}}`````{{}f}{{}h}=<{AdBd}{AjBd}{ce{}{}}000{cBl{}}{c{{Bj{e}}}{}{}}000000000000000{cBn{}}0000000{{A`Ad}{{Bj{{Bh{Aj}}l}}}}<```","c":[],"p":[[6,"ModelerInputEventType",0],[6,"PredictionParams",0],[5,"KalmanPredictorParams",0],[5,"ModelerParams",0],[1,"unit"],[6,"ModelerError",0],[6,"Ordering",154],[5,"StrokeModeler",0],[1,"bool"],[5,"ModelerInput",0],[5,"Formatter",155],[8,"Result",155],[5,"ModelerResult",0],[5,"UniquePtr",156],[10,"Hasher",157],[1,"f32"],[1,"tuple"],[1,"f64"],[6,"Option",158],[5,"Vec",159],[6,"Result",160],[5,"String",161],[5,"TypeId",162]],"b":[[54,"impl-Display-for-ModelerError"],[55,"impl-Debug-for-ModelerError"]]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
