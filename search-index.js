var searchIndex = JSON.parse('{\
"ink_stroke_modeler_rs":{"doc":"Unofficial Rust bindings for the ink-stroke-modeler C++ â€¦","t":"NNNDEDEDDENDMLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMNNNMMMMLLLLLLLLLLLMMLMMLLMLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMM","n":["AbslStatusCode","Disabled","Kalman","KalmanPredictorParams","ModelerError","ModelerInput","ModelerInputEventType","ModelerParams","ModelerResult","PredictionParams","StrokeEnd","StrokeModeler","acceleration_weight","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","confidence_baseline_linearity_confidence","confidence_desired_number_of_samples","confidence_max_estimation_distance","confidence_max_linear_deviation","confidence_max_travel_speed","confidence_min_travel_speed","default","eq","eq","eq","eq","eq","equivalent","equivalent","event_type","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","hash","hash","into","into","into","into","into","into","into","into","jerk_weight","kDown","kMove","kUp","max_time_samples","measurement_noise","min_catchup_velocity","min_stable_iteration","new","new","orientation","orientation","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pos","pos","position_modeler_drag_constant","position_modeler_spring_mass_constant","predict","prediction_interval","prediction_params","pressure","pressure","process_noise","provide","reset","reset_w_params","sampling_end_of_stroke_max_iterations","sampling_end_of_stroke_stopping_distance","sampling_max_outputs_per_call","sampling_min_output_rate","stylus_state_modeler_max_input_samples","suggested","suggested","tilt","tilt","time","time","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update","velocity","wobble_smoother_speed_ceiling","wobble_smoother_speed_floor","wobble_smoother_timeout"],"q":[[0,"ink_stroke_modeler_rs"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[5,2,2,0,0,0,0,0,0,0,2,0,3,9,12,7,5,1,2,3,4,9,12,7,5,1,2,3,4,1,2,3,4,1,2,3,4,5,1,3,3,3,3,3,3,7,5,1,2,3,4,5,1,9,9,12,5,5,1,2,3,4,9,9,12,12,7,5,1,2,3,4,5,1,9,12,7,5,1,2,3,4,3,1,1,1,3,3,3,3,9,7,9,12,5,1,2,3,4,9,12,4,4,7,3,4,9,12,3,5,7,7,4,4,4,4,4,3,4,9,12,9,12,1,2,3,4,5,9,12,7,5,1,2,3,4,9,12,7,5,1,2,3,4,9,12,7,5,1,2,3,4,7,12,4,4,4],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[3,3],[4,4],[[]],[[]],[[]],[[]],[[5,5],6],[[1,1],6],0,0,0,0,0,0,[[],7],[[5,5],8],[[1,1],8],[[2,2],8],[[3,3],8],[[4,4],8],[[],8],[[],8],[9,1],[[9,10],11],[[12,10],11],[[5,10],11],[[5,10],11],[[1,10],11],[[2,10],11],[[3,10],11],[[4,10],11],[[]],[[[13,[0]]],9],[[]],[[[13,[0]]],12],[[]],[[]],[[]],[[]],[[]],[[]],[[5,14]],[[1,14]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[1,15,16,16,16],9],[4,7],[9,16],[12,16],[[5,5],[[17,[6]]]],[[1,1],[[17,[6]]]],[[2,2],[[17,[6]]]],[[3,3],[[17,[6]]]],[[4,4],[[17,[6]]]],[9],[12],0,0,[7,[[19,[[18,[12]],5]]]],0,0,[9,16],[12,16],0,[20],[7,[[19,[5]]]],[[7,4],[[19,[5]]]],0,0,0,0,0,[[],3],[[],4],[9,16],[12,16],[9,15],[12,15],[[]],[[]],[[]],[[]],[[],21],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[7,9],[[19,[[18,[12]],5]]]],[12],0,0,0],"c":[],"p":[[4,"ModelerInputEventType"],[4,"PredictionParams"],[3,"KalmanPredictorParams"],[3,"ModelerParams"],[4,"ModelerError"],[4,"Ordering"],[3,"StrokeModeler"],[15,"bool"],[3,"ModelerInput"],[3,"Formatter"],[6,"Result"],[3,"ModelerResult"],[3,"UniquePtr"],[8,"Hasher"],[15,"f64"],[15,"f32"],[4,"Option"],[3,"Vec"],[4,"Result"],[3,"Demand"],[3,"String"],[3,"TypeId"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
