searchState.loadedDescShard("ink_stroke_modeler_rs", 0, "For the first pen down event (pen touches the screen)\nstruct holding all information for input event\nmodeler Input event Type\nall parameters for the modeler\nresult struct contains the position, time, presusre as …\nFor events between the first (<code>Down</code>) and last (<code>Up</code>) event …\nThis class models a stroke from a raw input stream. The …\nFor the last event (pen going up)\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe ratio of the pen’s velocity that is subtracted from …\nThe mass of the “weight” being pulled along the path, …\nModels the given input prediction without changing the …\nClears any in-progress stroke, keeping the same model …\nClears any in-progress stroke, and re initialize the model …\nThe maximum number of iterations to perform at the end of …\nThis determines the stop condition for the end-of-stroke …\nMaximum number of outputs to generate per call to Update …\nThe minimum number of modeled inputs to output per unit …\nthe maximum number of raw inputs to look at when searching …\nModelerParams::wobble_smoother_timeout : 0.04, …\nUpdates the model with a raw input, and appends newly …\nvalidate the parameters as being correct, returns a error …\nThe range of speed considered for wobble smoothing. At …\nthese parameters are used to apply smoothing to the input …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")